services:
  # PostgreSQL 15 Database
  postgres:
    image: postgres:15-alpine
    container_name: ai-chat-postgres
    environment:
      POSTGRES_DB: mydb
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: mypassword
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./ai-chat-branch-be/ddl/v1.sql:/docker-entrypoint-initdb.d/01-ddl.sql:ro
      - ./ai-chat-branch-be/dml/v1.sql:/docker-entrypoint-initdb.d/02-dml.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d mydb"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ai-chat-network

  # FastAPI Backend Application
  backend:
    build:
      context: ./ai-chat-branch-be
      dockerfile: Dockerfile
    container_name: ai-chat-backend
    environment:
      # Database configuration
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: mydb
      DB_USER: admin
      DB_PASSWORD: mypassword

      # For production, set OPENAI_API_KEY as environment variable on the host
      OPENAI_API_KEY: ${OPENAI_API_KEY:-}
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - ai-chat-network
    restart: unless-stopped

  # # Next.js Frontend Application
  # frontend:
  #   build:
  #     context: ./ai-chat-branch-fe
  #     dockerfile: Dockerfile
  #   container_name: ai-chat-frontend
  #   environment:
  #     # API URL for client-side calls (browser)
  #     NEXT_PUBLIC_API_URL: http://localhost:8000
  #     # Internal API URL for server-side calls (SSR)
  #     INTERNAL_API_URL: http://backend:8000

  #     # Next.js configuration
  #     NODE_ENV: production
  #     PORT: 3000
  #   ports:
  #     - "3000:3000"
  #   depends_on:
  #     - backend
  #   networks:
  #     - ai-chat-network
  #   restart: unless-stopped
  #   # Health check
  #   healthcheck:
  #     test: ["CMD-SHELL", "curl -f http://localhost:3000/api/health || exit 1"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3
  #     start_period: 40s

volumes:
  postgres_data:
    driver: local

networks:
  ai-chat-network:
    driver: bridge
